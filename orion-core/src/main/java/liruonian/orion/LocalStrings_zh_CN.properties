standardServer.initialize.initialized=The server named[{0}] has already been initialized
standardServer.start.started=The server named[{0}] has already been started
standardServer.stop.notStarted=The server named[{0}] has not yet been started
standardServer.await.create=StandardServer await: create[{0}]
standardServer.await.accept=StandardServer await: accept
standardServer.await.read=StandardServer await: read
connectorBase.constructor.illegalPort=Illegal port value [{0}], should between 0 and 65535
queuedEventBus.postEvent.timeout=Event timeout, discard directly, event id is {0}
defaultEventBus.postEvent.notInterest=No listener has registered for this event, event type is {0}
standardEngine.buildInvocations.duplicate=Duplicate service name found, ignored directly. service name={0}
standardEngine.buildInvocations.log=Find and load service [{0}]
standardEngine.handleResponseEvent.send=Send response success, event id is {0}
standardEngine.handleResponseEvent.sendError=Send response failed
standardEngine.postServiceNotFoundEvent.serviceNotFound=Service not found exception, service is {0}
sceneScanner.getAssociatedClass.error=Unexpected exception occurred, target class name is {0}
beanFactory.newInstance.error=Unexpected exception occurred, target class name is {0}
lifecycleSupport.initialize.alreadyInitialized={0} has already been initialized
lifecycleSupport.initialize.initializing={0} is initializing
lifecycleSupport.initialize.initialized={0} has been initialized normally
lifecycleSupport.initialize.error={0} encountered an exception during initialization
lifecycleSupport.start.abnormalStatus={0} is in an abnormal status
lifecycleSupport.start.starting={0} is starting
lifecycleSupport.start.started={0} has been started normally
lifecycleSupport.start.error={0} encountered an exception during starting
lifecycleSupport.stop.notStarted={0} has not yet been started
lifecycleSupport.stop.alreadyStopped={0} has already been stopped
lifecycleSupport.stop.stopping={0} is stopping
lifecycleSupport.stop.stopped={0} has been stopped normally
lifecycleSupport.stop.error={0} encountered an exception during stopping
baseRemoting.oneway.sendSuccess=Request message send success, id={0}
baseRemoting.oneway.sendFailed=Request message send failed, id={0}
baseRemoting.invokeSync.sendSuccess=Request message send success, id={0}
baseRemoting.invokeSync.sendFailed=Request message send failed, id={0}
baseRemoting.invokeSync.timeout=Wait response, request id={0} timeout
baseRemoting.invokeWithFuture.timeout=Wait response, request id={0} timeout
baseRemoting.invokeWithFuture.sendFailed=Request message send failed, id={0}
baseRemoting.invokeWithFuture.sendSuccess=Request message send success, id={0}
defaultConnectionFactory.doCreateConnection.timeout=Create connection to {0} timeout
defaultConnectionFactory.doCreateConnection.cancelled=Create connection to {0} cancelled
defaultConnectionFactory.doCreateConnection.error=Create connection to {0} error
connection.close.complete=Close the connection to remote address={0}
connection.close.error=Exception caught when closing connection {0}
defaultConnectionManager.add.emptyPool=Exception occurred when getOrCreate and empty pool
defaultConnectionManager.getConnectionPool.interrupt=Future task interrupted
defaultConnectionManager.getConnectionPool.execFailed=Future task execute failed
defaultConnectionManager.getConnectionPool.notRunYet=Future task has not run yet
defaultConnectionManager.getConnectionPool.notCompleteYet=Future task has not completed
defaultConnectionManager.getAndCreateIfAbsent.emptyPool=Exception occurred when getOrCreate and empty pool
protocols.registerProtocol.duplicate=Duplicate protocol code[{0}] exists
serverIdleHandler.userEventTriggered.connClosed=Connection idle, close directly, remoteAddr={0}
connectionEventHandler.connect.info=Try to connect to {0}
connectionEventHandler.disconnect.info=Connection disconnect to {0}
connectionEventHandler.close.info=Connection closed: {0}
connectionEventHandler.channelRegistered.info=Connection channel registered: {0}
connectionEventHandler.channelUnregistered.info=Connection channel unregistered: {0}
connectionEventHandler.channelActive.info=Connection channel active: {0}
connectionEventHandler.channelInactive.info=Connection channel inactive: {0}
logValve.invoke.request=Business request message received, id={0}, serivce={1}, parameters={2}
logValve.invoke.response=Business response message sended, id={0}, status={1}, body={2}
invocationValve.invoke.error=Unexpected error occured
invocationValve.invoke.discard=Response event has been discarded